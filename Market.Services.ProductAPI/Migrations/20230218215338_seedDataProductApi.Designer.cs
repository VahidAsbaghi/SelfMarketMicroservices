// <auto-generated />
using Market.Services.ProductAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Market.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230218215338_seedDataProductApi")]
    partial class seedDataProductApi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Market.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "Glossery",
                            Description = "An Excellent Product of Wood",
                            ImageUrl = "",
                            Name = "P1",
                            Price = 1000
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "TV",
                            Description = "An Excellent Product in TV",
                            ImageUrl = "",
                            Name = "P2",
                            Price = 3000
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Glossery",
                            Description = "An Excellent Product of Vahid's land",
                            ImageUrl = "",
                            Name = "P3",
                            Price = 500
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Glossery",
                            Description = "An Excellent Product of Delsa's Hand",
                            ImageUrl = "",
                            Name = "P4",
                            Price = 1000
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryName = "Mobile",
                            Description = "An Excellent Product of Apple",
                            ImageUrl = "",
                            Name = "P5",
                            Price = 10000
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
